<?php
//====================================================================
//====================================================================
//====================================================================
//!
//! @file    login.php
//! @brief   ログイン
//! @author  木屋 善夫
//! @date    2012-12-13
//! @version $Revision: $
//!
//! Copyright (C) 2012 Yoshio Kiya  All rights reserved.
//!
//====================================================================
//====================================================================
//====================================================================
require_once( dirname( __FILE__ ) . '/config.php' );

//====================================================================
//! コントローラー
//====================================================================
class CLoginCtrl extends CKyaCtrlHttp
{
	//================================================================
	/**
	 * 構築
	 * @access    public
	*/
	//================================================================
	public function __construct( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::__construct( );
	}

	//================================================================
	/**
	 * 消滅
	 * @access    public
	*/
	//================================================================
	public function __destruct( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::__destruct( );
	}

	//================================================================
	// アトリビュート(定数)
	//================================================================

	//================================================================
	// アトリビュート(変数)
	//================================================================

	//================================================================
	/**
	 * 初期化
	 * @access    public
	 * @retval    FALSE エラー
	*/
	//================================================================
	public function blInit( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		if ( !parent::blInit( ) )
			return FALSE;

		//=== コマンドを追加 =========================================
		$this->RegistCommand( 'LOGIN'  );
		$this->RegistCommand( 'REGIST' );

		//============================================================
		return TRUE;
	}

	//================================================================
	/**
	 * 処理
	 * @access    public
 	*/
	//================================================================
	public function Run( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::Run( );
	}

	//================================================================
	/**
	 * LOGINボタンを押した処理
	 * @access    public
	 * @param     String  $strValue $_REQUEST['SUBMIT'] の値
	 * @return    TRUE    残りのコマンドを処理しない
 	*/
	//================================================================
	public function blOnLogin( $strValue )
	{
		//============================================================
		$objDoc = objGetDoc( );

		//=== フォームから値を取得 ===================================
		$objDoc->LoadFromRequest( );

		//=== 入力エラーチェック =====================================
		if ( $objDoc->blCheckAllErrorMessage( TRUE ) )
			return TRUE;

		$strEMail = $objDoc->V_EMAIL;
		$strPass  = $objDoc->V_PASSWORD;
//DBG( $objDoc );
//die( );

		//=== 基本情報読み込み =======================================
//		$objDB = objGetDB( );
//		$rowUser = $objDB->rowQuery( 'SELECT * FROM ACCOUNT WHERE V_EMAIL = ?', $strEMail );
//DBG( $rowUser );
//		if ( empty( $rowUser ) )
//		{
//			//=== このハンドル名は未登録 =============================
//			DLOG( 'このハンドル名は未登録' );
//			AddError( 'ニックネームまたはパスワードが違います。' );
//			return;
//		}
		//============================================================
		$aryConfig = aryGetConfig( $strEMail );
		if ( $aryConfig['global']['email'] == 'default' )
		{
			DLOG( '未登録ID' );
			AddError( 'ログインIDまたはパスワードが違います。' );
			return;
		}

		//============================================================
		if ( $aryConfig['global']['password'] != $strPass )
		{
			//=== パスワードが違う ===================================
			DLOG( 'パスワードが違う' );
			AddError( 'ログインIDまたはパスワードが違います。' );
			return;
		}

		$rowUser = array( 
			  'V_EMAIL'    => $aryConfig['global']['email'   ]
			, 'V_PASSWORD' => $aryConfig['global']['password']
		);

		//============================================================
		$objApp = objGetApp( );
		$objApp->m_iLoginLevel = 1;
		$objApp->m_rowUser     = $rowUser;
//		AddMessage( 'ログインしました。' );
		$this->blOnReturn( 'top' );

		//============================================================
		return TRUE;
	}

	//================================================================
	/**
	 * REGISTボタンを押した処理
	 * @access    public
	 * @param     String  $strValue $_REQUEST['SUBMIT'] の値
	 * @return    TRUE    残りのコマンドを処理しない
 	*/
	//================================================================
	public function blOnRegist( $strValue )
	{
		//============================================================
		$objDoc = objGetDoc( );

		//=== フォームから値を取得 ===================================
		$objDoc->LoadFromRequest( );

		//=== 入力エラーチェック =====================================
		if ( $objDoc->blCheckAllErrorMessage( TRUE ) )
			return TRUE;

		$strEMail = $objDoc->V_EMAIL;
		$strPass  = $objDoc->V_PASSWORD;

		//============================================================
		$aryConfig = aryGetConfig( $strEMail );
		if ( $aryConfig['global']['email'] != 'default' )
		{
			DLOG( '登録済みID' );
			AddError( 'このメールアドレスは既に登録済みです。' );
			return;
		}

		$aryConfig['global']['email'   ] = $strEMail;
		$aryConfig['global']['password'] = $strPass;
		SetConfig( $strEMail, $aryConfig );

		$rowUser = array( 
			  'V_EMAIL'    => $aryConfig['global']['email'   ]
			, 'V_PASSWORD' => $aryConfig['global']['password']
		);

		//============================================================
		$objApp = objGetApp( );
		$objApp->m_iLoginLevel = 1;
		$objApp->m_rowUser     = $rowUser;
//		AddMessage( 'ログインしました。' );
		$this->blOnReturn( 'top' );

		//============================================================
		return TRUE;
	}

	//================================================================
	/**
	 * CANCELボタンを押した処理
	 * @access    public
	 * @param     String  $strValue $_REQUEST['SUBMIT'] の値
	 * @return    TRUE    残りのコマンドを処理しない
 	*/
	//================================================================
	public function blOnCancel( $strValue )
	{
		//============================================================
		$this->blOnReturn( 'top' );

		//============================================================
		return TRUE;
	}
}

//====================================================================
//! ドキュメント
//====================================================================
class CLoginDoc extends CKyaDocHttp
{
	//================================================================
	/**
	 * 構築
	 * @access    public
	*/
	//================================================================
	public function __construct( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::__construct( );

		//=== タイトルの設定 =========================================
		mixSetConfig( 'PAGE_TITLE', 'ログイン' );

		//=== フォーム情報 ===========================================
		$this->m_aryConfig = array(
			  'V_EMAIL' => array( 
				  'type'    => 'string'
				, 'title'   => 'ログインID'
				, 'default' => ''
			)
			, 'V_PASSWORD' => array(
				  'type'    => 'string'
				, 'title'   => 'パスワード'
				, 'default' => ''
			)
		);
	}

	//================================================================
	/**
	 * 消滅
	 * @access    public
	*/
	//================================================================
	public function __destruct( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::__destruct( );
	}

	//================================================================
	// アトリビュート(定数)
	//================================================================

	//================================================================
	// アトリビュート(変数)
	//================================================================

	//================================================================
	/**
	 * 初期化
	 * @access    public
	 * @retval    FALSE エラー
	*/
	//================================================================
	public function blInit( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		if ( !parent::blInit( ) )
			return FALSE;

		//============================================================
		return TRUE;
	}

	//================================================================
	/**
	 * 処理
	 * @access    public
 	*/
	//================================================================
	public function Run( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::Run( );
	}
}

//====================================================================
//! ヴュー
//====================================================================
class CLoginView extends CKyaViewHttp
{
	//================================================================
	/**
	 * 構築
	 * @access    public
	*/
	//================================================================
	public function __construct( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::__construct( );
	}

	//================================================================
	/**
	 * 消滅
	 * @access    public
	*/
	//================================================================
	public function __destruct( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::__destruct( );
	}

	//================================================================
	// アトリビュート(定数)
	//================================================================

	//================================================================
	// アトリビュート(変数)
	//================================================================

	//================================================================
	/**
	 * 初期化
	 * @access    public
	 * @retval    FALSE エラー
	*/
	//================================================================
	public function blInit( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		if ( !parent::blInit( ) )
			return FALSE;

		//============================================================
		return TRUE;
	}

	//================================================================
	/**
	 * 処理
	 * @access    public
 	*/
	//================================================================
	public function Run( )
	{
		//=== デフォルトインプリメンテーションの呼び出し =============
		parent::Run( );
	}
}

?>